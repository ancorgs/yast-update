/**
 * Module:	proposal_update.ycp
 *
 * Author:	Arvin Schnell <arvin@suse.de>
 *
 * Purpose:	Let user choose update settings.
 */
{
    textdomain "update";

    import "HTML";
    import "Update";
    import "Mode";

    string func  = WFM::Args(0);
    map    param = WFM::Args(1);
    map    ret   = $[];

    if ( func == "MakeProposal" )
    {
	boolean force_reset      = param["force_reset"     ]:false;
	boolean language_changed = param["language_changed"]:false;

	// call some function that makes a proposal here:
	//
	// DummyMod::MakeProposal( force_reset );

	// Fill return map

	if (Update::selectedRootPartition != "" && !Update::did_try_mount_partitions)
	{
	    UI::OpenDialog (`opt(`decorated ),
			    `Label(_("Mounting partitions. One moment please...")));

	    boolean tmp = Update::MountPartitions (Update::selectedRootPartition);

	    sleep (1000);

	    UI::CloseDialog ();
	}

	ret = $[ "preformatted_proposal" :
		 // Proposal for backup during update
		 HTML::List (["Update to SuSE Linux 8.3",
			      "Update based on \"Default\" selection",
			      "Clean up system"])
	];
    }
    else if ( func == "AskUser" )
    {
	boolean has_next = param["has_next"]:false;

	// call some function that displays a user dialog
	// or a sequence of dialogs here:
	//
	// sequence = DummyMod::AskUser( has_next );

	symbol result = WFM::CallFunction (`inst_update (true, has_next));

	// Fill return map

	ret = $[ "workflow_sequence" : result ];
    }
    else if ( func == "Description" )
    {
	// Fill return map.
	//
	// Static values do just nicely here, no need to call a function.

	ret =
	    $[
	      // this is a heading
	      "rich_text_title"	:	_( "Update options"  ),
	      // this is a menu entry
	      "menu_title"	:	_( "&Update options" ),
	      "id"		:	"update_stuff"
	    ];
    }

    return ret;
}
